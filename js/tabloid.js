// Generated by CoffeeScript 1.5.0
var js, setup;

js = ["http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"];

window.LocalStorage = {
  get: function() {
    var store;
    store = JSON.parse(localStorage.getItem('headlines'));
    return store != null ? store : store = [];
  },
  push: function(headline) {
    var store;
    store = LocalStorage.get();
    store.push(headline);
    return localStorage.setItem('headlines', JSON.stringify(store));
  },
  clear: function() {
    return localStorage.setItem('headlines', JSON.stringify([]));
  }
};

window.Gallery = {
  element: function(e) {
    return this.gallery = e;
  },
  push: function(headline) {
    var url, _new;
    Tabloid.draw(headline);
    url = $canvas.toDataURL();
    _new = $("<figure><a href='" + url + "'><img></a></figure>").find('img').attr('src', url).end();
    return this.gallery.prepend(_new);
  },
  populate: function() {
    var headline, _i, _len, _ref, _results;
    _ref = LocalStorage.get();
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      headline = _ref[_i];
      _results.push(Gallery.push(headline));
    }
    return _results;
  },
  enableIsotope: false,
  isotope: function() {
    if (!this.enableIsotope) {
      return;
    }
    if ((typeof $container !== "undefined" && $container !== null) && ($container.isotope != null)) {
      return $container.isotope().isotope('reloadItems').isotope({
        sortBy: 'original-order'
      });
    }
  }
};

window.Tabloid = {
  init: function() {
    window.$p = $('#tabloid #headline');
    window.$cover_image = $('#tabloid .source img');
    return this.prepareCanvas();
  },
  prepareCanvas: function() {
    window.$canvas = $('canvas')[0];
    window.$context = $canvas.getContext('2d');
    $context.textAlign = 'center';
    $context.textBaseline = 'top';
    $context.fillStyle = $p.css('color');
    return $context.font = this.font();
  },
  font: function() {
    var font;
    font = $p.css('font');
    if (font === "") {
      font = $p.css('font-size') + " " + $p.css('font-family');
    }
    return font;
  },
  draw: function(headline) {
    $context.drawImage($cover_image[0], 0, 0);
    if (headline == null) {
      headline = $("input").val();
    }
    return $context.fillText(headline, 360, 167, 500);
  },
  save: function() {
    Gallery.push(this.headline());
    LocalStorage.push(this.headline());
    return Gallery.isotope();
  },
  setHeadline: function(headline) {
    activate_button();
    $('p').html(headline);
    return this.draw();
  },
  headline: function() {
    return $p.html();
  },
  debug: function() {
    return $('#tabloid .generated').toggle();
  }
};

window.S3 = {
  sign_upload: function() {
    return $.ajax({
      url: 'signput.php',
      data: {
        name: this.name(),
        type: 'image/png'
      }
    });
  },
  name: function() {
    var date, slug;
    date = (new Date()).toLocaleDateString();
    slug = Tabloid.headline().toLowerCase().replace(/[^\w ]+/g, '').replace(/\s+/g, '-');
    return date + '/' + slug + ".png";
  },
  data: function() {
    return dataURItoBlob($canvas.toDataURL());
  },
  ajax: function() {
    return this.sign_upload().done(function(url) {
      console.log(decodeURIComponent(url));
      return $.ajax(decodeURIComponent(url), {
        type: 'PUT',
        data: S3.data(),
        crossDomain: true,
        contentType: 'image/png',
        processData: false,
        xhrFields: {
          withCredentials: true
        }
      });
    });
  },
  upload: function() {
    var deferred;
    deferred = this.ajax();
    deferred.error(function(response) {
      return console.log('error: ', response);
    });
    return deferred.done(function(data) {
      return console.log('done: ', data);
    });
  }
};

window.activate_button = function() {
  window.$button = $('#tabloid button');
  $button.off('click');
  return $button.on('click', function() {
    return Tabloid.save();
  });
};

setup = function() {
  Tabloid.init();
  Tabloid.draw();
  Gallery.element($('.gallery'));
  Gallery.populate();
  $p.on('keyup', function() {
    return Tabloid.setHeadline($(this).html());
  });
  return activate_button();
};

if (typeof require !== "undefined" && require !== null) {
  require(js, function() {
    return $(function() {
      return setup();
    });
  });
} else {
  $(function() {
    return setup();
  });
}
